
public class Number {

	public static void main(String[] args) {
		// TODO 自動生成されたメソッド・スタブ
		//配列の要素数を宣言
		//int[] a = new int[4];
		//インデックス番号（添え字）を整数型で初期化
		//int n = 0;
		//要素a0に値を代入
		//a[0] = 1;
		//要素a1に値を代入
		//a[1] = 2;
		//要素a2に値を代入
		//a[2] = 3;
		//要素a3に値を代入
		//a[3] = 4;
		//要素番号を指定して配列の中身を標準出力
		//System.out.println(a[n]);

		//配列aの宣言と初期化
		//int[] a = {1,2,3,4};
		//要素a0の値を標準出力
		//System.out.println(a[0]);
		//要素a1の値を標準出力
		//System.out.println(a[1]);
		//要素a2の値を標準出力
		//System.out.println(a[2]);
		//要素a3の値を標準出力
		//System.out.println(a[3]);
/*
		//整数型の配列aを初期化
		int[] a = {1,2,3,4,5,6,7};

		//whileによるループ処理で７回繰り返す
		while(n < 7) {
			//インデックス番号順にループ処理で要素内の値を標準出力する
			System.out.println(a[n]);
			//インデックス番号指定用の変数をインクリメントで１ずつ増やす
			n++;
		}
*/
		//多次元配列
		//インデックス番号を初期化
		int x = 0;
		int y = 0;
		//二次元配列aを初期化
		int[][] a = {
				{10, 20, 30},
				{40, 50, 60},
				{70, 80, 90}
		};
		//a[0][2]にのみ値を3加算する
		a[0][2] = a[0][2] + 3;

		//x軸についてのループ処理を作り3回処理を繰り返す
		while(x < 3){
			//表示内容１列目の標準出力
			System.out.println(x + "列目");
			//y軸についてのループ処理を作り3会処理を繰り返す
			while(y < 3){
				//標準出力で1列目、2列目、3列目の順に値を出力
				System.out.println(a[y][x]);
				//インクリメントでy軸のインデックス番号を加算
				y++;
			}
			//体裁用に一行空白を追加
			System.out.print("\n");
			//y軸のインデックス番号を初期化
			y = 0;
			//インクリメントでx軸のインデックス番号を加算
			x++;
		};
	}

}
